name: Release Workflow

on:
  pull_request:
    types:
      - labeled

jobs:
  run_if_label_matches:
    if: github.event.label.name == 'ci/merge-release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Merge the release branch
        run: |
          #
          # Merge the PR into the v1 and main branches and tag the resulting v1
          # branch commit with the release version tag
          #
          set -ex
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          # Fetch the PR, v1 and main branches
          git fetch origin v1 main "$GITHUB_HEAD_REF"
          # Merge the PR into the main branch
          git checkout main
          git merge --no-edit --no-ff "origin/$GITHUB_HEAD_REF"
          # Merge the PR into the v1 branch
          git checkout v1
          git merge --no-edit --no-ff "origin/$GITHUB_HEAD_REF"
          # Get the version tag out of the release branch name and tag the merge
          # result
          [[ "$GITHUB_HEAD_REF" =~ release-v?([[:alnum:]\.\-]+) ]]
          git tag v${BASH_REMATCH[1]}
          # Push the tag, v1, and main
          git push --tags origin v1 main

      - name: Remove the workflow label
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr edit ${{ github.event.number }} --remove-label ci/merge-release
