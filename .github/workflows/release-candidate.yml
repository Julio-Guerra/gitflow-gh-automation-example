name: Publish a new release candidate

on:
  pull_request:
    branches:
      - v1
    types:
      - labeled

jobs:
  bump_rc_and_tag:
    name: Create and publish a new release candidate version
    if: github.event.label.name == 'bot/release/publish-new-rc'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Get the release version tag
        id: get_version
        run: |
          # Get the version tag out of the release branch name
          _tools/release/parse-version.sh "$GITHUB_HEAD_REF"

      - run: |
        echo $(("${{ steps.get_version.outputs.rc }}" + 1))
        false

      - name: Configure and fetch the branches
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
          # Fetch the tags and the PR branch
          git fetch --tags origin "$GITHUB_HEAD_REF"

      - name: Merge the PR into the dev branch main
        run: |
          git checkout main
          git merge --no-edit -m "Merge branch $GITHUB_HEAD_REF into main #${{ github.event.number }}" --no-ff "origin/$GITHUB_HEAD_REF"

      - name: Merge the PR into the stable branch v1
        run: |
          git checkout v1
          git merge --no-edit -m "Merge branch $GITHUB_HEAD_REF into v1 #${{ github.event.number }}" --no-ff "origin/$GITHUB_HEAD_REF"

      - name: Create the git tag v${{ steps.get_version.outputs.version }}
        run: git tag v${{ steps.get_version.outputs.version }}

      - name: Push the branches and tag
        run: |
          # Push the tag, v1, and main
          git push --tags origin v1 main ":$GITHUB_HEAD_REF"

      - name: Add a PR comment
        if: success()
        run: |
          gh pr comment ${{ github.event.number }} -F - <<EOF
          :tada: Congratulations, the release branch was successfully merged
          and tagged with v${{ steps.get_version.outputs.version }}.
          EOF

      - name: Remove the workflow label
        if: always()
        run: gh pr edit ${{ github.event.number }} --remove-label bot/release/publish-new-rc
