name: Publish a new release candidate

on:
  pull_request:
    branches:
      - v1
    types:
      - labeled

jobs:
  bump_rc_and_tag:
    name: Create and publish a new release candidate version
    if: github.event.label.name == 'bot/release/publish-new-rc'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Get the release version tag
        id: get_version
        run: |
          # Get the version tag out of the release branch name
          _tools/release/parse-version.sh "$(cat version)"

      - id: bump_version
        run: |
          major=${{ steps.get_version.outputs.major }}
          minor=${{ steps.get_version.outputs.minor }}
          patch=${{ steps.get_version.outputs.patch }}
          rc=$(("${{ steps.get_version.outputs.rc }}" + 1))
          version=v$major.$minor.$patch-rc.$rc
          echo $version > version
          echo "::set-output name=version::$version"

      - name: Configure the git author and fetch the branch
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
          # Fetch the tags, the PR, v1 and main branches
          git fetch --tags origin "$GITHUB_HEAD_REF"

      - name: Commit the version file change
        run: |
          git checkout "$GITHUB_HEAD_REF"
          git add version
          git commit -m "release candidate ${{ steps.bump_version.outputs.version }}"

      - name: Create the git tag ${{ steps.bump_version.outputs.version }}
        run: git tag ${{ steps.bump_version.outputs.version }}

      - name: Push the branch and tag
        run: |
          # Push the tag and the release branch
          git push --tags origin "$GITHUB_HEAD_REF"

      - name: Add a PR comment
        if: success()
        run: |
          gh pr comment ${{ github.event.number }} -F - <<EOF
          :tada: The release candidate tag v${{ steps.bump_version.outputs.version }} has been successfully published.
          EOF

      - name: Remove the workflow label
        if: always()
        run: gh pr edit ${{ github.event.number }} --remove-label bot/release/publish-new-rc
